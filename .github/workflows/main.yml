name: Create release

on:
  release:
    types: [created]
#on: push    

jobs:
  
  build-linux:

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
    - name: Create DEB
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: 6.8
        arguments: jpackage -PinstallerType=deb
#      run: gradle jpackage -PinstallerType=deb
    - name: Rename DEB
      run: mv build/Notepack-package/*.deb ./file.deb ; ls -lha .
    - name: Create Runtime ZIP
      run: cd build/Notepack-package/; zip -r ../../notepack.zip Notepack/ ; cd ../..
      #- name: Create RPM
      #uses: eskatos/gradle-command-action@v1
      #with:
      #  gradle-version: 6.8
      #  arguments: jpackage -PinstallerType=rpm
#      run: gradle jpackage -PinstallerType=rpm
#- name: Rename RPM
#      run: mv build/Notepack-package/*.rpm ./file.rpm ; ls -lha .
    - name: Download appimage
      run: wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage"
    - name: Build appimage
      run: cp -r build/Notepack-package/Notepack/ appimage-base-dir/ ; chmod +x appimagetool ; ./appimagetool appimage-base-dir/ notepack.AppImage
      
    - name: Upload AppImage
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} 
        asset_path: ./notepack.AppImage
        asset_name: notepack-${{ github.event.release.tag_name }}.AppImage
        asset_content_type: application/octet-stream
        
    - name: Upload DEB
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} 
        asset_path: ./file.deb
        asset_name: notepack-${{ github.event.release.tag_name }}-1_amd64.deb
        asset_content_type: application/octet-stream        
        
        #    - name: Upload RPM
        # uses: actions/upload-release-asset@v1
        #env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #with:
        #upload_url: ${{ github.event.release.upload_url }}
        #asset_path: ./file.rpm
        #asset_name: notepack-${{ github.event.release.tag_name }}_amd64.rpm
        #asset_content_type: application/octet-stream
        
    - name: Upload Linux Runtime
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} 
        asset_path: ./notepack.zip
        asset_name: notepack-${{ github.event.release.tag_name }}-linux-runtime.zip
        asset_content_type: application/octet-stream          
      

  build-windows:

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
    - name: Create MSI
      uses: eskatos/gradle-command-action@v1
      with:
        gradle-version: 6.8
        arguments: jpackage -PinstallerType=msi
#      run: gradle jpackage -PinstallerType=msi
    - name: Rename MSI
      run: ls build/Notepack-package ; mv build/Notepack-package/*.msi ./file.msi

    - name: Create zip runtime
      run: cd build/Notepack-package/; 7z a ../../notepack.zip Notepack/ ; cd ../..

    - name: Upload Windows Runtime
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./notepack.zip
        asset_name: notepack-${{ github.event.release.tag_name }}-windows-runtime.zip
        asset_content_type: application/octet-stream

    - name: Upload Windows Msi
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./file.msi
        asset_name: notepack-${{ github.event.release.tag_name }}-windows-installer.msi
        asset_content_type: application/octet-stream
